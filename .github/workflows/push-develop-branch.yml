# Unique name for this workflow
name: Deploy integration branch to integration and staging/uat orgs

# Definition when the workflow should run
on:
    push:
      branches: [ dev_* ]
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    deploy-branch-to-int-and-staging-orgs:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Now we install nodejs in the VM, and specify version 14
            - uses: actions/setup-node@v4
              with:
                node-version: '18.6.0'

            # The idea is that the VM can access your remote repository
            # because your repository is an sfdx project.
            # This is a default action that allows us to enter the root 
            # directory of the repository

            # Make sure to specify fetch-depth:0. This allows us to
            # access previous commits that have been pushed to the repository.

            # We'll need this later when we try to figure out which metadata has 
            # changed between commits, so that we can only deploy that metadata
            # to the destination org

            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Install NPM
              run: |
                  npm install
            # Now Install Salesforce CLI
            - name: Install the SFDX CLI
              run: |
                npm install @salesforce/cli --global
                sf --help

            # Then we install the SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            # This is an awesome plugin that allows us to extract a package.xml with the metadata
            # that has changed between commits. I highly recommend going over the github readme 
            # for more information on how this works.
            - name: Decrypt the server.key.enc file & store inside assets folder
              run: |
                    openssl enc -nosalt -aes-256-cbc -d -in assets/devhub.key.enc -out assets/devhub.key -base64 -K DE3B4F6346E0CFA95CA695168A0FD8DA4D06AE808A0AFA9A4DBD2502D5DD6FE7 -iv AC767FEDCF2105140E84B62495C3F43A     
            - name: Authrorize Staging Org
              run: |
                  sf org login jwt --client-id ${{secrets.SFDX_HUB_CLIENT_ID}} --username ${{secrets.SFDX_HUB_USERNAME}} --jwt-key-file assets/devhub.key --alias HubOrg

            - name: Push Source to Staging Org
              run: |
                    sf project deploy start --ignore-conflicts --source-dir force-app --target-org HubOrg

            - name: Run Apex Tests
              run: |
                   sf apex run test --target-org HubOrg -r human --class-names TestGitHubClassTest