name: Validate PR in Scratch Org

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ dev_* ]
    paths:
      - 'force-app/**'

jobs:
  validate-pr-in-scratch-org:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
            # Now we install nodejs in the VM, and specify version 14
            - uses: actions/setup-node@v4
              with:
                node-version: '18.6.0'

            # The idea is that the VM can access your remote repository
            # because your repository is an sfdx project.
            # This is a default action that allows us to enter the root 
            # directory of the repository

            # Make sure to specify fetch-depth:0. This allows us to
            # access previous commits that have been pushed to the repository.

            # We'll need this later when we try to figure out which metadata has 
            # changed between commits, so that we can only deploy that metadata
            # to the destination org

            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            
            # Now, we need a way to let the developer specify which tests to run, which
            # could be all tests or just the tests relevant to their deployment.

            # To do this, we can ask the developer to name their test classes in the
            # body of the PR, using the following syntax

            # Apex::[CommunitiesLoginControllerTest,MyProfilePageControllerTest]::Apex
            # or Apex::[all]::Apex to run all tests

            # This special delimeter can be added to the PR template so that your 
            # team doesn't have to remember the syntax. 

            # Once a developer has specified a list of classes to run, we need to be able
            # to extract this information from the PR, and pass it on the the VM.

            - name: 'Read PR Body'
              env:
                # The pull request body is available through the github context object
                # we put the body of the pull request in an env variable (only available to this step)
                PR_BODY: ${{github.event.pull_request.body}}

              # Here we print the content of the environment variable and
              # pipe to a a text file.

              # Then we call the local script parsePR.js, which will create
              # a new file called testsToRun.txt. This file will have the list
              # of tests to run separated by a comma

              # Finally, we add the list of tests to the $GITHUB_ENV variable
              # as this allows us to reference the list in a subsequent step.  If you
              # were using a normal env variable, its value would not be available outside this step.
              run: |
                  echo $PR_BODY > ./pr_body.txt
                  node ./parsePR.js              
                  TESTS=$(cat testsToRun.txt)       
                  echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV
                  
            # Now Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # Then we install the SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            # This is an awesome plugin that allows us to extract a package.xml with the metadata
            # that has changed between commits. I highly recommend going over the github readme 
            # for more information on how this works.
            - name: Decrypt the server.key.enc file & store inside assets folder
              run: |
                    openssl enc -nosalt -aes-256-cbc -d -in assets/devhub.key.enc -out assets/devhub.key -base64 -K DE3B4F6346E0CFA95CA695168A0FD8DA4D06AE808A0AFA9A4DBD2502D5DD6FE7 -iv AC767FEDCF2105140E84B62495C3F43A     
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 
            - name: Create Scratch Org
              run: |
                  sfdx auth:jwt:grant --clientid ${{secrets.SFDX_HUB_CLIENT_ID}} --username ${{secrets.SFDX_HUB_USERNAME}} --jwtkeyfile assets/devhub.key
                  sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -v

            - name: Push Source to Scratch Org
              run: |
                    sfdx force:source:push -f force-app -u scratch-org

            - name: Run Apex Tests
              run: |
                  sfdx force:apex:test:run -u scratch-org -r human

            - name: Validate Metadata
              run: |
                  sfdx force:mdapi:validate -u scratch-org -m force-app/main/default

            - name: Delete Scratch Org
              run: |
                  sfdx force:org:delete -u scratch-org